#!/usr/bin/groovy

node {
    def root = pwd()
    def golangTool = tool 'golang_1.7'
    def mvn = tool 'M3'
    
    def appvers = ""
    
    stage("Setup") {
        deleteDir()
        withEnv([
          "PATH+=${golangTool}/bin:${root}/gopath/bin",
          "GOROOT=${golangTool}",
          "GOPATH=${root}/gopath"
        ]) {
            sh """
              mkdir -p ${root}/gopath/bin ${root}/gopath/pkg ${root}/gopath/src/github.com/venicegeo/pzsvc-exec
              go version
            """
        }
		dir("${root}/gopath/src/github.com/venicegeo/pzsvc-exec") {
			if(env.GITLAB_CREDS) {
				git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}", credentialsId: "${env.GITLAB_CREDS}"
			} else {
				git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}"
			}
            appvers = sh(script: """git describe --long --tags --always | sed 's/\\./-/'g""", returnStdout: true).trim()
        }
    }
    
    stage("Archive") {
        def archiveName = "pzsvc-exec.tgz"
        dir("${root}/gopath/src/github.com/venicegeo/pzsvc-exec") {
            withEnv([
              "PATH+=${golangTool}/bin:${root}/gopath/bin",
              "GOROOT=${golangTool}",
              "GOPATH=${root}/gopath"
            ]) {
                 sh """
                   go install
                   cd pzsvc-taskworker && go install
                   cd ../pzsvc && go test -v -coverprofile=${root}/pzsvc.cov
                   cd ../pzse && go test -v -coverprofile=${root}/pzse.cov
                   cd ${root}
                   go tool cover -func=pzsvc.cov -o pzsvc.cov.txt
                   go tool cover -func=pzse.cov -o pzse.cov.txt
                   cp gopath/bin/* .
                   tar -cvzf ${archiveName} *.cov* pzsvc-*
                """
                def getDependencyStatus = sh(script: """mvn --quiet --settings ~/.m2/settings.xml dependency:get -Dmaven.repo.local="${root}/.m2/repository" -DrepositoryId=nexus -DartifactId=pzsvc-exec -Dversion=${appvers} -DgroupId="org.venice.beachfront" -Dpackaging=tgz -DremoteRepositories="nexus::default::${env.ARTIFACT_STORAGE_DEPLOY_URL}" >> /dev/null 2>&1""", returnStatus: true)
                if(getDependencyStatus == 0) {
                    echo "Artifact version ${appvers} exists in Nexus, nothing to do"
                } else {
                    sh """
                      mvn -X --settings ~/.m2/settings.xml deploy:deploy-file -Dfile=${archiveName} -DrepositoryId=nexus	-Durl="${env.ARTIFACT_STORAGE_DEPLOY_URL}" -DgroupId="org.venice.beachfront" -DgeneratePom=false -Dpackaging=tgz -Dmaven.repo.local="${root}/.m2/repository" -DartifactId=pzsvc-exec -Dversion=${appvers}
                    """
                }
            }
        }
    }
}
